(define (cont-frac n d k)
	(define (do n d i)
		(if (= i k)
	    	    (/ (n i) (d i))
	    	    (/ (n i) (+ (d i) (do n d (+ i 1))))))
	(do n d 1))

(define (cont-frac-iter n d k)
	(define (iter result k)
		(if (= k 0)
		    result
		    (iter (/ (n k) (+ (d k) result)) (- k 1))))
	(iter 0 k))

(define (euler-expansion k)
	(define (euler-n i) 1.0)
	(define (euler-d i) 
		(cond ((or (= i 1) (= i 2)) i)
		      ((or (= (remainder i 3) 0) (= (remainder i 3) 1)) 1)
		      (else 			    
		      	    (- i (/ (- i 2) 3)))))
	(cont-frac euler-n euler-d k))

(display (euler-expansion 10))
(newline)