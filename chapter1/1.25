(define (fast-expt b n)
	(cond ((= n 0) 1)
	      ((even? n) (square (fast-expt b (/ n 2))))
	      (else (* b (fast-expt b (- n 1))))))

(define (square n)
	(* n n))

(define (expmod base exp m)	
	(remainder (fast-expt base exp) m))

(display (fast-expt 2 4))
(newline)

(define base 10)
(define pow 400)

(display (expmod base pow 3))
(newline)

(display (remainder (expt base pow) 3))
(newline)

